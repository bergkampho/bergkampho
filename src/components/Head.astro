---
import { ViewTransitions } from "astro:transitions";

import GoogleTagManager from "../components/GoogleTagManager.astro";
import ImgAvatar from "../img/avatar.jpg";
import meta from "../js/meta.js";
import "../styles/global.css";

const { title } = Astro.props;
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta
    name="description"
    content={`${meta.title} ${meta.subtitle} ${meta.description} Nice to meet you.`}
  />
  <meta
    name="keywords"
    content="Bergkamp Ho, bho, fung, freelance, siufung, bergkampho, bergkamp, html production, javascript, job, web, shopping cart"
  />
  <meta name="author" content="Bergkamp Ho" />
  <meta property="og:image" content={ImgAvatar.src} />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="generator" content={Astro.generator} />

  <GoogleTagManager />

  <link rel="shortcut icon" href="/img/favicon.ico" />

  <title>{title}</title>

  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link
    href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap"
    rel="stylesheet"
  />
  <link href="/css/font-awesome.min.css" rel="stylesheet" />
  <script is:inline>
    // This code is inlined in the head to make dark mode instant & blocking.
    const getThemePreference = () => {
      return localStorage.theme === "dark" ||
        (!("theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
        ? "dark"
        : "light";
    };

    function setThemekMode(document) {
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");

      if (typeof localStorage !== "undefined") {
        // Watch the document element and persist user preference when it changes.
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    }

    setThemekMode(document);

    document.addEventListener("astro:before-swap", (event) => {
      setThemekMode(event.newDocument);
    });
  </script>
  <ViewTransitions />
</head>
